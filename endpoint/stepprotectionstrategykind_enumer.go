// Code generated by "enumer -type=StepProtectionStrategyKind -json -transform=snake -trimprefix=StepProtectionStrategyKind"; DO NOT EDIT.

//
package endpoint

import (
	"encoding/json"
	"fmt"
)

const (
	_StepProtectionStrategyKindName_0 = "holdsbookmarks"
	_StepProtectionStrategyKindName_1 = "none"
)

var (
	_StepProtectionStrategyKindIndex_0 = [...]uint8{0, 5, 14}
	_StepProtectionStrategyKindIndex_1 = [...]uint8{0, 4}
)

func (i StepProtectionStrategyKind) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _StepProtectionStrategyKindName_0[_StepProtectionStrategyKindIndex_0[i]:_StepProtectionStrategyKindIndex_0[i+1]]
	case i == 4:
		return _StepProtectionStrategyKindName_1
	default:
		return fmt.Sprintf("StepProtectionStrategyKind(%d)", i)
	}
}

var _StepProtectionStrategyKindValues = []StepProtectionStrategyKind{1, 2, 4}

var _StepProtectionStrategyKindNameToValueMap = map[string]StepProtectionStrategyKind{
	_StepProtectionStrategyKindName_0[0:5]:  1,
	_StepProtectionStrategyKindName_0[5:14]: 2,
	_StepProtectionStrategyKindName_1[0:4]:  4,
}

// StepProtectionStrategyKindString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func StepProtectionStrategyKindString(s string) (StepProtectionStrategyKind, error) {
	if val, ok := _StepProtectionStrategyKindNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to StepProtectionStrategyKind values", s)
}

// StepProtectionStrategyKindValues returns all values of the enum
func StepProtectionStrategyKindValues() []StepProtectionStrategyKind {
	return _StepProtectionStrategyKindValues
}

// IsAStepProtectionStrategyKind returns "true" if the value is listed in the enum definition. "false" otherwise
func (i StepProtectionStrategyKind) IsAStepProtectionStrategyKind() bool {
	for _, v := range _StepProtectionStrategyKindValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for StepProtectionStrategyKind
func (i StepProtectionStrategyKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for StepProtectionStrategyKind
func (i *StepProtectionStrategyKind) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("StepProtectionStrategyKind should be a string, got %s", data)
	}

	var err error
	*i, err = StepProtectionStrategyKindString(s)
	return err
}
